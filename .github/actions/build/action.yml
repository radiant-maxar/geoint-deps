---
name: Build Image / RPM(s)

inputs:
  download_rpms:
    description: Download RPMS
    required: false
  el_version:
    description: The EL version ('el_version' + '/' is appended to 'image_prefix')
    required: true
  image_prefix:
    default: ghcr.io/${{ github.repository }}/
    description: Image Prefix
    required: false
  image_registry:
    default: ghcr.io
    description: Image Registry
    required: false
  make_target:
    description: Make target
    required: true
  push_image:
    description: Push image
    required: false

runs:
  using: composite

  steps:
    - name: Download RPMS directory
      if: inputs.download_rpms
      uses: actions/download-artifact@v3
      with:
        name: RPMS-${{ inputs.el_version }}-${{ github.sha }}
        path: RPMS

    - name: Get list of pre-existing RPMs
      if: inputs.download_rpms
      run: |
        echo "RPMS=$(find RPMS -type f -name *.rpm | xargs)" >> $GITHUB_ENV
      shell: bash --noprofile --norc -euxo pipefail {0}

    - name: Log in to GHCR
      uses: ./.github/actions/docker/registry-login
      with:
        server: ${{ inputs.image_registry }}

    - name: Build Image / RPM(s)
      env:
        COMPOSE_FILE: docker-compose.${{ inputs.el_version }}.yml
        IMAGE_PREFIX: ${{ inputs.image_prefix }}${{ inputs.el_version }}/
        MAKEFILES: Makefile.${{ inputs.el_version }}
      run: |
        make ${{ inputs.make_target }}
      shell: bash --noprofile --norc -euxo pipefail {0}

    - name: Push `${{ matrix.image }}` to GHCR
      env:
        COMPOSE_FILE: docker-compose.${{ inputs.el_version }}.yml
      if: inputs.push_image
      run: |
        docker-compose push ${{ matrix.image }}
      shell: bash --noprofile --norc -euxo pipefail {0}

    - name: Remove pre-existing RPMs
      if: inputs.download_rpms
      run: |
        rm --force --verbose ${RPMS}
      shell: bash --noprofile --norc -euxo pipefail {0}

    - name: Upload RPMS directory
      uses: actions/upload-artifact@v3
      with:
        name: RPMS-${{ inputs.el_version }}-${{ github.sha }}
        path: RPMS
