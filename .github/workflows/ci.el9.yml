---
name: Build & Push (EL9)

on:
  - push

env:
  DOCKER_BUILDKIT: 1
  EL_VERSION: el9

jobs:
  build-images:
    name: Build `${{ matrix.image }}` Image
    runs-on: ubuntu-latest

    strategy:
      # Uncomment the following lines in order to build & push base images
      max-parallel: 1
      matrix:
        image:
          - rpmbuild
          - rpmbuild-generic
          - rpmbuild-pgdg

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Delete old images
        uses: radiant-maxar/geoint-actions/github-api/delete-package@v1.2
        with:
          el_version: ${{ env.EL_VERSION }}
          package_name: ${{ matrix.image }}
          token: ${{ secrets.PKG_DELETE_TOKEN }}
          token_type: token

      - name: Build `${{ matrix.image }}` Image
        uses: radiant-maxar/geoint-actions/build@v1.2
        with:
          el_version: ${{ env.EL_VERSION }}
          make_target: ${{ matrix.image }}
          push_image: true
          upload_rpms: false


  build-rpms-1:
    name: Build `${{ matrix.rpm }}` RPM(s)
    needs: build-images
    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        rpm:
          - armadillo
          - CGAL
          - FileGDBAPI
          - g2clib
          - geos
          - iniparser
          - journald-cloudwatch-logs
          - libosmium
          - libpqxx
          - mapnik
          - mapserver
          - openstreetmap-carto
          - osm2pgsql
          - osmctools
          - osmdbt
          - osmium-tool
          - osmosis
          - passenger
          - postgis
          - proj
          - protozero
          - pyosmium
          - python3-mapnik
          - rubygem-libxml-ruby
          - sbt
          - spawn-fcgi
          - sqlite-pcre
          - step-ca
          - step-cli
          - wal-g

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Build `${{ matrix.rpm }}` RPM(s)
        uses: radiant-maxar/geoint-actions/build@v1.2
        with:
          el_version: ${{ env.EL_VERSION }}
          make_target: ${{ matrix.rpm }}


  build-rpms-2:
    name: Build `${{ matrix.rpm }}` RPM(s)
    needs: build-rpms-1
    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        rpm:
          - libgeotiff
          - SFCGAL

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Build `${{ matrix.rpm }}` RPM(s)
        uses: radiant-maxar/geoint-actions/build@v1.2
        with:
          el_version: ${{ env.EL_VERSION }}
          download_rpms: true
          make_target: ${{ matrix.rpm }}


  build-rpms-3:
    name: Build `${{ matrix.rpm }}` RPM(s)
    needs: build-rpms-2
    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        rpm:
          - gdal

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Build `${{ matrix.rpm }}` RPM(s)
        uses: radiant-maxar/geoint-actions/build@v1.2
        with:
          el_version: ${{ env.EL_VERSION }}
          download_rpms: true
          make_target: ${{ matrix.rpm }}


  create-and-push-repo:
    name: Create & push repository
    if: ${{ github.ref_name != 'stable' }}
    needs: build-rpms-3
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Download RPMS artifact
        uses: radiant-maxar/geoint-actions/artifact/download@v1.2
        with:
          base_path: .
          directory: RPMS
          el_version: ${{ env.EL_VERSION }}

      - name: Create repository
        uses: radiant-maxar/geoint-actions/repository/create@v1.2
        with:
          el_version: ${{ env.EL_VERSION }}
          repo_dirname: non-stable/${{ github.ref_name }}

      - name: Upload repository
        uses: radiant-maxar/geoint-actions/repository/upload@v1.2
        with:
          aws_access_key_id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws_secret_access_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          el_version: ${{ env.EL_VERSION }}
          repo_dirname: non-stable/${{ github.ref_name }}
          s3_bucket: geoint-deps
