ARG rpmbuild_channel
ARG rpmbuild_image=rpmbuild-generic
ARG rpmbuild_image_prefix
# hadolint ignore=DL3007
FROM ${rpmbuild_image_prefix}${rpmbuild_image}:latest
ARG go_version=1.20.3
ARG go_checksum=979694c2c25c735755bf26f4f45e19e64e4811d661dd07b8c010f7a8e18adfca
ARG packages

ENV GOPATH=${RPMBUILD_HOME}/go
ENV PATH=${RPMBUILD_HOME}/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin

SHELL ["/bin/bash", "-c", "-o", "pipefail"]

# Download and verify Go as ftp.
COPY scripts/google_linux_signing_key.gpg /tmp/google_linux_signing_key.gpg
USER ftp
WORKDIR /tmp
RUN curl -sSL -O https://dl.google.com/go/go${go_version}.linux-amd64.tar.gz && \
    curl -sSL -O https://dl.google.com/go/go${go_version}.linux-amd64.tar.gz.asc && \
    echo "${go_checksum}  go${go_version}.linux-amd64.tar.gz" | sha256sum && \
    HOME=/tmp gpg --import < google_linux_signing_key.gpg && \
    HOME=/tmp gpg --verify go${go_version}.linux-amd64.tar.gz.asc && \
    rm -fr /tmp/.gnupg /tmp/go${go_version}.linux-amd64.tar.gz.asc

# Switch back to root to innstall Go and any other extra packages.
USER root
# hadolint ignore=DL3032,DL3040,DL3041
RUN --mount=type=cache,target=/var/cache/dnf \
    tar -C /usr/local -xzf /tmp/go${go_version}.linux-amd64.tar.gz && \
    rm -f /tmp/go${go_version}.linux-amd64.tar.gz && \
    if [ -n "${packages}" ] ; then dnf -q -y install ${packages}; fi

# Switch back to default RPM building user.
USER ${RPMBUILD_USER}
WORKDIR ${RPMBUILD_HOME}

# Setup Go directories.
RUN mkdir -p ${GOPATH}/{bin,src/github.com}
