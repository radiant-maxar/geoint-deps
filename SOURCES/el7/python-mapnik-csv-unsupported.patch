commit 6340d09d7d92d68301b337a1557655590889e09e
Author: David Hummel <6109326+hummeltech@users.noreply.github.com>
Date:   Mon May 11 19:57:56 2020 -0700

    CSV datasource plugin is not supported with Mapnik's Boost version

diff --git a/test/python_tests/agg_rasterizer_integer_overflow_test.py b/test/python_tests/agg_rasterizer_integer_overflow_test.py
index af705e3d8..8e4bddd99 100644
--- a/test/python_tests/agg_rasterizer_integer_overflow_test.py
+++ b/test/python_tests/agg_rasterizer_integer_overflow_test.py
@@ -55,36 +55,5 @@ def test_that_coordinates_do_not_overflow_and_polygon_is_rendered_memory():
     eq_(im.get_pixel(128, 128), expected_color.packed())
 
 
-def test_that_coordinates_do_not_overflow_and_polygon_is_rendered_csv():
-    expected_color = mapnik.Color('white')
-    projection = '+init=epsg:4326'
-    ds = mapnik.MemoryDatasource()
-    context = mapnik.Context()
-    feat = mapnik.Feature.from_geojson(json.dumps(geojson), context)
-    ds.add_feature(feat)
-    geojson_string = "geojson\n'%s'" % json.dumps(geojson['geometry'])
-    ds = mapnik.Datasource(**{'type': 'csv', 'inline': geojson_string})
-    s = mapnik.Style()
-    r = mapnik.Rule()
-    sym = mapnik.PolygonSymbolizer()
-    sym.fill = expected_color
-    r.symbols.append(sym)
-    s.rules.append(r)
-    lyr = mapnik.Layer('Layer', projection)
-    lyr.datasource = ds
-    lyr.styles.append('style')
-    m = mapnik.Map(256, 256, projection)
-    m.background_color = mapnik.Color('green')
-    m.append_style('style', s)
-    m.layers.append(lyr)
-    # 17/20864/45265.png
-    m.zoom_to_box(mapnik.Box2d(-13658379.710221574,
-                               6197514.253362091, -13657768.213995293, 6198125.749588372))
-    # works 15/5216/11316.png
-    # m.zoom_to_box(mapnik.Box2d(-13658379.710221574,6195679.764683247,-13655933.72531645,6198125.749588372))
-    im = mapnik.Image(256, 256)
-    mapnik.render(m, im)
-    eq_(im.get_pixel(128, 128), expected_color.packed())
-
 if __name__ == "__main__":
     exit(run_all(eval(x) for x in dir() if x.startswith("test_")))
diff --git a/test/python_tests/render_test.py b/test/python_tests/render_test.py
index 42f63f260..5185d83b0 100644
--- a/test/python_tests/render_test.py
+++ b/test/python_tests/render_test.py
@@ -260,30 +260,6 @@ def test_render_with_detector():
     im2.save(actual_file, 'png8')
 
 
-if 'shape' in mapnik.DatasourceCache.plugin_names():
-
-    def test_render_with_scale_factor():
-        m = mapnik.Map(256, 256)
-        mapnik.load_map(m, '../data/good_maps/marker-text-line.xml')
-        m.zoom_all()
-        sizes = [.00001, .005, .1, .899, 1, 1.5, 2, 5, 10, 100]
-        for size in sizes:
-            im = mapnik.Image(256, 256)
-            mapnik.render(m, im, size)
-            expected_file = './images/support/marker-text-line-scale-factor-%s.png' % size
-            actual_file = '/tmp/' + os.path.basename(expected_file)
-            im.save(actual_file, 'png32')
-            if os.environ.get('UPDATE'):
-                im.save(expected_file, 'png32')
-            # we save and re-open here so both png8 images are ready as full
-            # color png
-            actual = mapnik.Image.open(actual_file)
-            expected = mapnik.Image.open(expected_file)
-            eq_(actual.tostring('png32'),
-                expected.tostring('png32'),
-                'failed comparing actual (%s) and expected (%s)' % (actual_file,
-                                                                    expected_file))
-
 if __name__ == "__main__":
     setup()
     exit(run_all(eval(x) for x in dir() if x.startswith("test_")))
