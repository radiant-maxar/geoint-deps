diff --git a/scripts/get-external-data.py b/scripts/get-external-data.py
index e4910e6..77e314b 100755
--- a/scripts/get-external-data.py
+++ b/scripts/get-external-data.py
@@ -231,24 +231,38 @@ def main():
                 else:
                     headers = {}
 
-                logging.info("  Fetching {}".format(source["url"]))
-                download = s.get(source["url"], headers=headers)
-                download.raise_for_status()
-
-                if download.status_code == requests.codes.ok:
-                    if "Last-Modified" in download.headers:
-                        new_last_modified = download.headers["Last-Modified"]
-                    else:
-                        new_last_modified = None
-
-                    logging.info("  Download complete ({} bytes)".format(len(download.content)))
-
-                    if "archive" in source and source["archive"]["format"] == "zip":
-                        logging.info("  Decompressing file")
-                        zip = zipfile.ZipFile(io.BytesIO(download.content))
-                        for member in source["archive"]["files"]:
-                            zip.extract(member, workingdir)
-
+                source_ok = False
+
+                source_basename = os.path.basename(source["url"])
+                source_zip = os.path.join(data_dir, source_basename)
+                if os.path.isfile(source_zip):
+                    logging.info("Source ZIP already downloaded")
+                    zip = zipfile.ZipFile(source_zip)
+                    for member in source["archive"]["files"]:
+                        zip.extract(member, workingdir)
+                    new_last_modified = None
+                    source_ok = True
+                else:
+                    logging.info("  Fetching {}".format(source["url"]))
+                    download = s.get(source["url"], headers=headers)
+                    download.raise_for_status()
+
+                    if download.status_code == requests.codes.ok:
+                        if "Last-Modified" in download.headers:
+                            new_last_modified = download.headers["Last-Modified"]
+                        else:
+                            new_last_modified = None
+
+                        logging.info("  Download complete ({} bytes)".format(len(download.content)))
+
+                        if "archive" in source and source["archive"]["format"] == "zip":
+                            logging.info("  Decompressing file")
+                            zip = zipfile.ZipFile(io.BytesIO(download.content))
+                            for member in source["archive"]["files"]:
+                                zip.extract(member, workingdir)
+                        source_ok = True
+
+                if source_ok:
                     ogrpg = "PG:dbname={}".format(database)
 
                     if port is not None:
