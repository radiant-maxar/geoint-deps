diff --git a/test/python_tests/json_feature_properties_test.py b/test/python_tests/json_feature_properties_test.py
index 1d65acf62..3f9604586 100644
--- a/test/python_tests/json_feature_properties_test.py
+++ b/test/python_tests/json_feature_properties_test.py
@@ -15,68 +15,68 @@ chars = [
     {
         "name": "single_quote",
         "test": "string with ' quote",
-        "json": '{"type":"Feature","id":1,"geometry":null,"properties":{"name":"string with \' quote"}}'
+        "json": '{"type":"Feature","id":0,"geometry":null,"properties":{"name":"string with \' quote"}}'
     },
     {
         "name": "escaped_single_quote",
         "test": "string with \' quote",
-        "json": '{"type":"Feature","id":1,"geometry":null,"properties":{"name":"string with \' quote"}}'
+        "json": '{"type":"Feature","id":0,"geometry":null,"properties":{"name":"string with \' quote"}}'
     },
     {
         "name": "double_quote",
         "test": 'string with " quote',
-        "json": '{"type":"Feature","id":1,"geometry":null,"properties":{"name":"string with \\" quote"}}'
+        "json": '{"type":"Feature","id":0,"geometry":null,"properties":{"name":"string with \\" quote"}}'
     },
     {
         "name": "double_quote2",
         "test": "string with \" quote",
-        "json": '{"type":"Feature","id":1,"geometry":null,"properties":{"name":"string with \\" quote"}}'
+        "json": '{"type":"Feature","id":0,"geometry":null,"properties":{"name":"string with \\" quote"}}'
     },
     {
         "name": "reverse_solidus",  # backslash
         "test": "string with \\ quote",
-        "json": '{"type":"Feature","id":1,"geometry":null,"properties":{"name":"string with \\\\ quote"}}'
+        "json": '{"type":"Feature","id":0,"geometry":null,"properties":{"name":"string with \\\\ quote"}}'
     },
     {
         "name": "solidus",  # forward slash
         "test": "string with / quote",
-        "json": '{"type":"Feature","id":1,"geometry":null,"properties":{"name":"string with / quote"}}'
+        "json": '{"type":"Feature","id":0,"geometry":null,"properties":{"name":"string with / quote"}}'
     },
     {
         "name": "backspace",
         "test": "string with \b quote",
-        "json": '{"type":"Feature","id":1,"geometry":null,"properties":{"name":"string with \\b quote"}}'
+        "json": '{"type":"Feature","id":0,"geometry":null,"properties":{"name":"string with \\b quote"}}'
     },
     {
         "name": "formfeed",
         "test": "string with \f quote",
-        "json": '{"type":"Feature","id":1,"geometry":null,"properties":{"name":"string with \\f quote"}}'
+        "json": '{"type":"Feature","id":0,"geometry":null,"properties":{"name":"string with \\f quote"}}'
     },
     {
         "name": "newline",
         "test": "string with \n quote",
-        "json": '{"type":"Feature","id":1,"geometry":null,"properties":{"name":"string with \\n quote"}}'
+        "json": '{"type":"Feature","id":0,"geometry":null,"properties":{"name":"string with \\n quote"}}'
     },
     {
         "name": "carriage_return",
         "test": "string with \r quote",
-        "json": '{"type":"Feature","id":1,"geometry":null,"properties":{"name":"string with \\r quote"}}'
+        "json": '{"type":"Feature","id":0,"geometry":null,"properties":{"name":"string with \\r quote"}}'
     },
     {
         "name": "horiztonal_tab",
         "test": "string with \t quote",
-        "json": '{"type":"Feature","id":1,"geometry":null,"properties":{"name":"string with \\t quote"}}'
+        "json": '{"type":"Feature","id":0,"geometry":null,"properties":{"name":"string with \\t quote"}}'
     },
     # remainder are c++ reserved, but not json
     {
         "name": "vert_tab",
         "test": "string with \v quote",
-        "json": '{"type":"Feature","id":1,"geometry":null,"properties":{"name":"string with \\u000b quote"}}'
+        "json": '{"type":"Feature","id":0,"geometry":null,"properties":{"name":"string with \\u000b quote"}}'
     },
     {
         "name": "alert",
         "test": "string with \a quote",
-        "json": '{"type":"Feature","id":1,"geometry":null,"properties":{"name":"string with \\u0007 quote"}}'
+        "json": '{"type":"Feature","id":0,"geometry":null,"properties":{"name":"string with \\u0007 quote"}}'
     }
 ]
 
@@ -86,7 +86,7 @@ ctx.push('name')
 
 def test_char_escaping():
     for char in chars:
-        feat = mapnik.Feature(ctx, 1)
+        feat = mapnik.Feature(ctx, 0)
         expected = char['test']
         feat["name"] = expected
         eq_(feat["name"], expected)
diff --git a/test/python_tests/ogr_test.py b/test/python_tests/ogr_test.py
index c0c81f56d..a19a45074 100644
--- a/test/python_tests/ogr_test.py
+++ b/test/python_tests/ogr_test.py
@@ -151,7 +151,7 @@ if 'ogr' in mapnik.DatasourceCache.plugin_names():
                            u'coordinates': [30,
                                             10]},
              u'type': u'Feature',
-             u'id': 2,
+             u'id': 0,
              u'properties': {u'type': u'point',
                              u'WKT': u'           POINT (30 10)'}})
         feat = fs.next()
@@ -165,7 +165,7 @@ if 'ogr' in mapnik.DatasourceCache.plugin_names():
                                             [40,
                                              40]]},
                 u'type': u'Feature',
-                u'id': 3,
+                u'id': 0,
                 u'properties': {u'type': u'linestring',
                                 u'WKT': u'      LINESTRING (30 10, 10 30, 40 40)'}})
         feat = fs.next()
@@ -183,7 +183,7 @@ if 'ogr' in mapnik.DatasourceCache.plugin_names():
                                              [30,
                                               10]]]},
                 u'type': u'Feature',
-                u'id': 4,
+                u'id': 0,
                 u'properties': {u'type': u'polygon',
                                 u'WKT': u'         POLYGON ((30 10, 10 20, 20 40, 40 40, 30 10))'}})
         feat = fs.next()
@@ -203,7 +203,7 @@ if 'ogr' in mapnik.DatasourceCache.plugin_names():
                                                 20, 30], [
                                                     35, 35], [
                                                         30, 20], [
-                                                            20, 30]]]}, u'type': u'Feature', u'id': 5, u'properties': {
+                                                            20, 30]]]}, u'type': u'Feature', u'id': 0, u'properties': {
                                                                 u'type': u'polygon', u'WKT': u'         POLYGON ((35 10, 10 20, 15 40, 45 45, 35 10),(20 30, 35 35, 30 20, 20 30))'}})
         feat = fs.next()
         actual = json.loads(feat.to_geojson())
@@ -218,7 +218,7 @@ if 'ogr' in mapnik.DatasourceCache.plugin_names():
                                             [30,
                                              10]]},
                 u'type': u'Feature',
-                u'id': 6,
+                u'id': 0,
                 u'properties': {u'type': u'multipoint',
                                 u'WKT': u'      MULTIPOINT ((10 40), (40 30), (20 20), (30 10))'}})
         feat = fs.next()
@@ -240,7 +240,7 @@ if 'ogr' in mapnik.DatasourceCache.plugin_names():
                                              [30,
                                                 10]]]},
                 u'type': u'Feature',
-                u'id': 7,
+                u'id': 0,
                 u'properties': {u'type': u'multilinestring',
                                 u'WKT': u' MULTILINESTRING ((10 10, 20 20, 10 40),(40 40, 30 30, 40 20, 30 10))'}})
         feat = fs.next()
@@ -266,13 +266,13 @@ if 'ogr' in mapnik.DatasourceCache.plugin_names():
                                                 [15,
                                                  5]]]]},
                 u'type': u'Feature',
-                u'id': 8,
+                u'id': 0,
                 u'properties': {u'type': u'multipolygon',
                                 u'WKT': u'    MULTIPOLYGON (((30 20, 10 40, 45 40, 30 20)),((15 5, 40 10, 10 20, 5 10, 15 5)))'}})
         feat = fs.next()
         actual = json.loads(feat.to_geojson())
         eq_(actual, {u'geometry': {u'type': u'MultiPolygon', u'coordinates': [[[[40, 40], [20, 45], [45, 30], [40, 40]]], [[[20, 35], [10, 30], [10, 10], [30, 5], [45, 20], [20, 35]], [[30, 20], [20, 15], [20, 25], [
-            30, 20]]]]}, u'type': u'Feature', u'id': 9, u'properties': {u'type': u'multipolygon', u'WKT': u'    MULTIPOLYGON (((40 40, 20 45, 45 30, 40 40)),((20 35, 45 20, 30 5, 10 10, 10 30, 20 35),(30 20, 20 25, 20 15, 30 20)))'}})
+            30, 20]]]]}, u'type': u'Feature', u'id': 0, u'properties': {u'type': u'multipolygon', u'WKT': u'    MULTIPOLYGON (((40 40, 20 45, 45 30, 40 40)),((20 35, 45 20, 30 5, 10 10, 10 30, 20 35),(30 20, 20 25, 20 15, 30 20)))'}})
         feat = fs.next()
         actual = json.loads(feat.to_geojson())
         eq_(actual,
@@ -297,7 +297,7 @@ if 'ogr' in mapnik.DatasourceCache.plugin_names():
                                                              [3,
                                                               4]]}]},
                 u'type': u'Feature',
-                u'id': 10,
+                u'id': 0,
                 u'properties': {u'type': u'collection',
                                 u'WKT': u'      GEOMETRYCOLLECTION(POLYGON((1 1,2 1,2 2,1 2,1 1)),POINT(2 3),LINESTRING(2 3,3 4))'}})
 
