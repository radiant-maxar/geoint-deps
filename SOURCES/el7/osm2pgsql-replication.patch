diff --git a/scripts/osm2pgsql-replication b/scripts/osm2pgsql-replication
index 207d7ccd..3f5ee0d9 100755
--- a/scripts/osm2pgsql-replication
+++ b/scripts/osm2pgsql-replication
@@ -95,14 +95,14 @@ def table_exists(conn, table_name, schema_name=None):
         return cur.rowcount > 0
 
 
-def compute_database_date(conn, schema, prefix):
+def compute_database_date(conn, schema, prefix, osm_server):
     """ Determine the date of the database from the newest object in the
         database.
     """
     # First, find the way with the highest ID in the database
     # Using nodes would be more reliable but those are not cached by osm2pgsql.
     with conn.cursor() as cur:
-        table = sql.Identifier(schema, f'{prefix}_ways')
+        table = sql.Identifier(f'{prefix}_ways')
         cur.execute(sql.SQL("SELECT max(id) FROM {}").format(table))
         osmid = cur.fetchone()[0] if cur.rowcount == 1 else None
 
@@ -112,7 +112,7 @@ def compute_database_date(conn, schema, prefix):
 
     LOG.debug("Using way id %d for timestamp lookup", osmid)
     # Get the way from the API to find the timestamp when it was created.
-    url = 'https://www.openstreetmap.org/api/0.6/way/{}/1'.format(osmid)
+    url = '{}/api/0.6/way/{}/1'.format(osm_server, osmid)
     headers = {"User-Agent" : "osm2pgsql-update",
                "Accept" : "application/json"}
     with urlrequest.urlopen(urlrequest.Request(url, headers=headers)) as response:
@@ -290,7 +290,7 @@ def init(conn, args):
     this with the `--server` parameter.
     """
     if args.osm_file is None:
-        date = compute_database_date(conn, args.middle_schema, args.prefix)
+        date = compute_database_date(conn, args.middle_schema, args.prefix, args.osm_server)
         if date is None:
             return 1
 
@@ -474,6 +474,9 @@ def get_parser():
                           formatter_class=RawDescriptionHelpFormatter,
                           add_help=False)
     grp = cmd.add_argument_group('Replication source arguments')
+    grp.add_argument('--osm-server', metavar='URL',
+                     default='https://www.openstreetmap.org',
+                     help='Use OpenStreetMap server at the given URL (default: %(default)s)')
     srcgrp = grp.add_mutually_exclusive_group()
     srcgrp.add_argument('--osm-file', metavar='FILE',
                         help='Get replication information from the given file.')
@@ -539,7 +542,7 @@ def main():
                         level=max(4 - args.verbose, 1) * 10)
 
     args.table_name = f'{args.prefix}_replication_status'
-    args.table = sql.Identifier(args.middle_schema, args.table_name)
+    args.table = sql.Identifier(args.table_name)
 
     conn = connect(args)
 
