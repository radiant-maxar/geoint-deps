---
version: '3.7'

x-rpmbuild:
  dist: &rpmbuild_dist .el9
  channel_name: &rpmbuild_channel stable-el9
  email: &rpmbuild_email foundationgeoint-packaging@maxar.com
  packager_name: &rpmbuild_name FoundationGEOINT Packaging
  postgres_version: &postgres_version '14'
  vendor: &rpmbuild_vendor Maxar Technologies
  base_args: &rpmbuild_base_args
    rpmbuild_dist: *rpmbuild_dist
    rpmbuild_email: *rpmbuild_email
    rpmbuild_name: *rpmbuild_name
    rpmbuild_uid: "${RPMBUILD_UID}"
    rpmbuild_gid: "${RPMBUILD_GID}"
  build_defaults: &build_defaults
    context: .
    dockerfile: docker/Dockerfile.rpmbuild-generic
    labels:
      maintainer: *rpmbuild_email
      vendor: *rpmbuild_vendor
  # Use consistent values for minimum versions for RPM build
  # and runtime requirements.
  minimum_versions:
    geos: &geos_min_version 3.10.0
    gdal: &gdal_min_version 3.4.0
    libosmium: &libosmium_min_version 2.18.0
    postgis_min_version: &postgis_min_version 3.2.0
    proj: &proj_min_version 7.2.0
    protobuf: &protobuf_min_version 3.0.0
    protobuf-c: &protobuf_c_min_version 1.3.0
    protozero: &protozero_min_version 1.7.0
    sqlite_min_version: &sqlite_min_version 3.11.0
  # Configuration for building every dependency RPM.
  rpms:
    CGAL:
      image: rpmbuild-cgal
      version: &CGAL_version '4.14.3-2'
    FileGDBAPI:
      image: rpmbuild-generic
      version: &FileGDBAPI_version 1.5.2-1
    SFCGAL:
      image: rpmbuild-sfcgal
      version: &SFCGAL_version '1.3.10-1'
    armadillo:
      image: rpmbuild-armadillo
      version: &armadillo_version 11.1.1-1
    arpack:
      image: rpmbuild-arpack
      version: &arpack_version 3.8.0-1
    dumb-init:
      image: rpmbuild-generic
      version: '1.2.5-1'
    gdal:
      image: rpmbuild-gdal
      version: &gdal_version '3.2.3-1'
      defines:
        geos_min_version: *geos_min_version
        proj_min_version: *proj_min_version
    geos:
      image: rpmbuild-generic
      version: &geos_version 3.10.2-1
    gpsbabel:
      image: rpmbuild-gpsbabel
      version: &gpsbabel_version '1.7.0-1'
    google-noto-fonts-extra:
      image: rpmbuild-fonts
      version: &google-noto-fonts-extra_version '20210210-1'
      defines:
        commit: '0c0b4f8660099c9cda5db230f9ce38733089a2a9'
      arch: noarch
    hanazono-fonts:
      image: rpmbuild-fonts
      version: &hanazono-fonts_version '20170904-1'
      arch: noarch
    libgeotiff:
      image: rpmbuild-libgeotiff
      version: &libgeotiff_version 1.7.1-1
      defines:
        proj_min_version: *proj_min_version
    libgta:
      image: rpmbuild-generic
      version: &libgta_version 1.2.1-1
    journald-cloudwatch-logs:
      image: rpmbuild-journald-cloudwatch-logs
      version: &journald-cloudwatch-logs_version '0.2.0-1'
    libkml:
      image: rpmbuild-libkml
      version: &libkml_version  1.3.0-1
    libosmium:
      image: rpmbuild-libosmium
      version: &libosmium_version 2.18.0-1
      arch: noarch
      name: libosmium-devel
      defines:
        protozero_min_version: *protozero_min_version
    mapnik:
      image: rpmbuild-mapnik
      version: &mapnik_version '3.0.24-1'
      defines:
        geos_min_version: *geos_min_version
        postgis_min_version: *postgis_min_version
        proj_min_version: *proj_min_version
    mod_tile:
      image: rpmbuild-mod_tile
      version: &mod_tile_version '0.6.1-2'
    openstreetmap-carto:
      image: rpmbuild-openstreetmap-carto
      version: &openstreetmap_carto_version '5.4.0-2'
      arch: noarch
      defines:
        data_natural_earth_version: '5.0.1'
    osmctools:
      image: rpmbuild-osmctools
      version: &osmctools_version '0.9-1'
    osmdbt:
      image: rpmbuild-osmdbt
      version: &osmdbt_version '0.3-1'
      defines:
        commit: 'e0158c0751207b0e77ab67e40a837016759e203d'
        libosmium_min_version: *libosmium_min_version
    osmosis:
      image: rpmbuild-generic
      version: &osmosis_version '0.48.3-1'
      arch: noarch
    osmium-tool:
      image: rpmbuild-osmium-tool
      version: &osmium-tool_version '1.13.2-1'
      defines:
        libosmium_min_version: *libosmium_min_version
        protozero_min_version: *protozero_min_version
    osm2pgsql:
      image: rpmbuild-osm2pgsql
      version: &osm2pgsql_version '1.6.0-1'
      defines:
        libosmium_min_version: '2.17.3'
        proj_min_version: *proj_min_version
        postgis_min_version: *postgis_min_version
        protobuf_c_min_version: *protobuf_c_min_version
    passenger:
      image: rpmbuild-passenger
      version: &passenger_version '6.0.13-1'
    postgis:
      image: rpmbuild-postgis
      version: &postgis_version '3.2.1-1'
      defines:
        gdal_min_version: *gdal_min_version
        geos_min_version: *geos_min_version
        proj_min_version: *proj_min_version
        protobuf_min_version: *protobuf_min_version
        protobuf_c_min_version: *protobuf_c_min_version
    proj:
      image: rpmbuild-proj
      version: &proj_version 9.0.0-1
      defines:
        data_version: '1.9'
        googletest_version: 1.11.0
    protozero:
      image: rpmbuild-protozero
      version: &protozero_version 1.7.1-1
      arch: noarch
      name: protozero-devel
      defines:
        protobuf_min_version: *protobuf_min_version
    python-mapnik:
      image: rpmbuild-python-mapnik
      version: &python-mapnik_version '3.0.23-1'
      defines:
        # Have to specify git commit, project doesn't consistently use tags.
        commit: '7da019cf9eb12af8f8aa88b7d75789dfcd1e901b'
    python3-osmium:
      image: rpmbuild-pyosmium
      version: &pyosmium_version '3.3.0-1'
      defines:
        libosmium_min_version: *libosmium_min_version
        protozero_min_version: *protozero_min_version
        pybind11_version: '2.7.1'
    rack:
      image: rpmbuild-rack
      version: &rack_version '2.2.3-1'
      arch: noarch
      name: rubygem-rack
      spec_file: 'SPECS/rubygem-rack.spec'
    rubygem-libxml-ruby:
      image: rpmbuild-rubygem-libxml-ruby
      version: &rubygem_libxml_ruby_version '3.2.2-1'
    sbt:
      image: rpmbuild-generic
      version: &sbt_version 1.6.1-1
      arch: noarch
    sqlite-pcre:
      image: rpmbuild-sqlite-pcre
      version: &sqlite_pcre_version 2007.1.20-1
    tbb:
      image: rpmbuild-tbb
      version: &tbb_version 2020.3-1
    uriparser:
      image: rpmbuild-uriparser
      version: &uriparser_version 0.9.6-1
  service_volumes: &service_volumes
    - "./RPMS:/rpmbuild/RPMS:rw"
    - "./SOURCES:/rpmbuild/SOURCES:rw"
    - "./SPECS:/rpmbuild/SPECS:ro"
    - "./scripts:/rpmbuild/scripts:ro"
  service_defaults: &service_defaults
    command: 'tail -f /dev/null'
    init: true
    volumes: *service_volumes

services:
  rpmbuild:
    build:
      context: .
      dockerfile: docker/Dockerfile.rpmbuild
      args:
        <<: *rpmbuild_base_args
      labels:
        maintainer: *rpmbuild_email
        vendor: *rpmbuild_vendor
    command: 'tail -f /dev/null'
    init: true
    user: nobody
  rpmbuild-generic:
    <<: *service_defaults
    depends_on:
      - rpmbuild
    build:
      <<: *build_defaults
      args:
        rpmbuild_channel: *rpmbuild_channel
  rpmbuild-armadillo:
    <<: *service_defaults
    depends_on:
      - rpmbuild-arpack
    build:
      <<: *build_defaults
      args:
        arpack_version: *arpack_version
        packages: "${RPMBUILD_ARMADILLO_PACKAGES}"
        rpmbuild_channel: *rpmbuild_channel
      dockerfile: docker/Dockerfile.rpmbuild-armadillo
  rpmbuild-arpack:
    <<: *service_defaults
    depends_on:
      - rpmbuild-generic
    build:
      <<: *build_defaults
      args:
        packages: "${RPMBUILD_ARPACK_PACKAGES}"
        rpmbuild_channel: *rpmbuild_channel
  rpmbuild-cgal:
    <<: *service_defaults
    depends_on:
      - rpmbuild-generic
    build:
      <<: *build_defaults
      args:
        packages: "${RPMBUILD_CGAL_PACKAGES}"
        rpmbuild_channel: *rpmbuild_channel
  rpmbuild-fonts:
    <<: *service_defaults
    depends_on:
      - rpmbuild-generic
    build:
      <<: *build_defaults
      args:
        packages: 'fontpackages-devel git python3 python3-pip'
        rpmbuild_channel: *rpmbuild_channel
  rpmbuild-gdal:
    <<: *service_defaults
    depends_on:
      - rpmbuild-pgdg
    build:
      <<: *build_defaults
      args:
        cgal_version: *CGAL_version
        filegdbapi_version: *FileGDBAPI_version
        geos_version: *geos_version
        gpsbabel_version: *gpsbabel_version
        libgeotiff_version: *libgeotiff_version
        libkml_version: *libkml_version
        packages: "${RPMBUILD_GDAL_PACKAGES}"
        proj_version: *proj_version
        rpmbuild_channel: *rpmbuild_channel
        sfcgal_version: *SFCGAL_version
      dockerfile: docker/Dockerfile.rpmbuild-gdal
  rpmbuild-gpsbabel:
    <<: *service_defaults
    depends_on:
      - rpmbuild-generic
    build:
      <<: *build_defaults
      args:
        packages: "${RPMBUILD_GPSBABEL_PACKAGES}"
        rpmbuild_channel: *rpmbuild_channel
  rpmbuild-proj:
    <<: *service_defaults
    depends_on:
      - rpmbuild-generic
    build:
      <<: *build_defaults
      args:
        packages: "${RPMBUILD_PROJ_PACKAGES}"
        rpmbuild_channel: *rpmbuild_channel
  rpmbuild-libgeotiff:
    <<: *service_defaults
    depends_on:
      - rpmbuild-proj
    build:
      <<: *build_defaults
      args:
        packages: "${RPMBUILD_LIBGEOTIFF_PACKAGES}"
        rpmbuild_channel: *rpmbuild_channel
        proj_version: *proj_version
      dockerfile: docker/Dockerfile.rpmbuild-libgeotiff
  rpmbuild-libkml:
    <<: *service_defaults
    depends_on:
      - rpmbuild-uriparser
    build:
      <<: *build_defaults
      args:
        packages: "${RPMBUILD_LIBKML_PACKAGES}"
        rpmbuild_channel: *rpmbuild_channel
        uriparser_version: *uriparser_version
      dockerfile: docker/Dockerfile.rpmbuild-libkml
  rpmbuild-libosmium:
    <<: *service_defaults
    depends_on:
      - rpmbuild-protozero
    build:
      <<: *build_defaults
      args:
        packages: "${RPMBUILD_LIBOSMIUM_PACKAGES}"
        protozero_version: *protozero_version
        rpmbuild_channel: *rpmbuild_channel
      dockerfile: docker/Dockerfile.rpmbuild-libosmium
  rpmbuild-journald-cloudwatch-logs:
    <<: *service_defaults
    depends_on:
      - rpmbuild-generic
    build:
      <<: *build_defaults
      args:
        packages: "${RPMBUILD_JOURNALD_CLOUDWATCH_LOGS_PACKAGES}"
        rpmbuild_channel: *rpmbuild_channel
      dockerfile: docker/Dockerfile.rpmbuild-go
  rpmbuild-mapnik:
    <<: *service_defaults
    depends_on:
      - rpmbuild-postgis
    build:
      <<: *build_defaults
      args:
        cgal_version: *CGAL_version
        filegdbapi_version: *FileGDBAPI_version
        gdal_version: *gdal_version
        geos_version: *geos_version
        gpsbabel_version: *gpsbabel_version
        libgeotiff_version: *libgeotiff_version
        libkml_version: *libkml_version
        packages: "${RPMBUILD_MAPNIK_PACKAGES}"
        postgis_version: *postgis_version
        proj_version: *proj_version
        rpmbuild_channel: *rpmbuild_channel
        sfcgal_version: *SFCGAL_version
      dockerfile: docker/Dockerfile.rpmbuild-postgis-generic
  rpmbuild-mod_tile:
    <<: *service_defaults
    depends_on:
      - rpmbuild
    build:
      <<: *build_defaults
      args:
        packages: "${RPMBUILD_MOD_TILE_PACKAGES}"
        rpmbuild_channel: *rpmbuild_channel
      dockerfile: docker/Dockerfile.rpmbuild-geoint-deps
  rpmbuild-openstreetmap-carto:
    <<: *service_defaults
    depends_on:
      - rpmbuild-generic
    build:
      <<: *build_defaults
      args:
        packages: "${RPMBUILD_OPENSTREETMAP_CARTO_PACKAGES}"
        rpmbuild_channel: *rpmbuild_channel
  rpmbuild-osmctools:
    <<: *service_defaults
    depends_on:
      - rpmbuild-generic
    build:
      <<: *build_defaults
      args:
        packages: "${RPMBUILD_OSMCTOOLS_PACKAGES}"
        rpmbuild_channel: *rpmbuild_channel
  rpmbuild-osmdbt:
    <<: *service_defaults
    depends_on:
      - rpmbuild-libosmium
      - rpmbuild-pgdg
    build:
      <<: *build_defaults
      args:
        libosmium_version: *libosmium_version
        packages: "${RPMBUILD_OSMDBT_PACKAGES}"
        protozero_version: *protozero_version
        rpmbuild_channel: *rpmbuild_channel
        rpmbuild_image: rpmbuild-pgdg
      dockerfile: docker/Dockerfile.rpmbuild-libosmium-generic
  rpmbuild-osmium-tool:
    <<: *service_defaults
    depends_on:
      - rpmbuild-libosmium
    build:
      <<: *build_defaults
      args:
        libosmium_version: *libosmium_version
        packages: "${RPMBUILD_OSMIUM_TOOL_PACKAGES}"
        protozero_version: *protozero_version
        rpmbuild_channel: *rpmbuild_channel
      dockerfile: docker/Dockerfile.rpmbuild-libosmium-generic
  rpmbuild-osm2pgsql:
    <<: *service_defaults
    depends_on:
      - rpmbuild-libosmium
      - rpmbuild-postgis
    build:
      <<: *build_defaults
      args:
        cgal_version: *CGAL_version
        filegdbapi_version: *FileGDBAPI_version
        gdal_version: *gdal_version
        geos_version: *geos_version
        gpsbabel_version: *gpsbabel_version
        libgeotiff_version: *libgeotiff_version
        libkml_version: *libkml_version
        libosmium_version: *libosmium_version
        packages: "${RPMBUILD_OSM2PGSQL_PACKAGES}"
        postgis_version: *postgis_version
        proj_version: *proj_version
        protozero_version: *protozero_version
        rpmbuild_channel: *rpmbuild_channel
        sfcgal_version: *SFCGAL_version
      dockerfile: docker/Dockerfile.rpmbuild-osm2pgsql
  rpmbuild-passenger:
    <<: *service_defaults
    depends_on:
      - rpmbuild
    build:
      <<: *build_defaults
      args:
        packages: "${RPMBUILD_PASSENGER_PACKAGES}"
        rpmbuild_channel: *rpmbuild_channel
      dockerfile: docker/Dockerfile.rpmbuild-geoint-deps
  rpmbuild-pgdg:
    <<: *service_defaults
    depends_on:
      - rpmbuild
    build:
      <<: *build_defaults
      args:
        postgres_version: *postgres_version
        rpmbuild_channel: *rpmbuild_channel
      dockerfile: docker/Dockerfile.rpmbuild-pgdg
  rpmbuild-postgis:
    <<: *service_defaults
    depends_on:
      - rpmbuild-gdal
    build:
      <<: *build_defaults
      args:
        cgal_version: *CGAL_version
        filegdbapi_version: *FileGDBAPI_version
        gdal_version: *gdal_version
        geos_version: *geos_version
        gpsbabel_version: *gpsbabel_version
        libgeotiff_version: *libgeotiff_version
        libkml_version: *libkml_version
        packages: "${RPMBUILD_POSTGIS_PACKAGES}"
        proj_version: *proj_version
        rpmbuild_channel: *rpmbuild_channel
        sfcgal_version: *SFCGAL_version
      dockerfile: docker/Dockerfile.rpmbuild-postgis
  rpmbuild-protozero:
    <<: *service_defaults
    depends_on:
      - rpmbuild-generic
    build:
      <<: *build_defaults
      args:
        packages: "${RPMBUILD_PROTOZERO_PACKAGES}"
        rpmbuild_channel: *rpmbuild_channel
  rpmbuild-pyosmium:
    <<: *service_defaults
    depends_on:
      - rpmbuild-libosmium
    build:
      <<: *build_defaults
      args:
        libosmium_version: *libosmium_version
        protozero_version: *protozero_version
        packages: "${RPMBUILD_PYOSMIUM_PACKAGES}"
        python3_packages: pytest==7.0.1
        rpmbuild_channel: *rpmbuild_channel
      dockerfile: docker/Dockerfile.rpmbuild-libosmium-generic
  rpmbuild-python-mapnik:
    <<: *service_defaults
    depends_on:
      - rpmbuild-mapnik
    build:
      <<: *build_defaults
      args:
        cgal_version: *CGAL_version
        filegdbapi_version: *FileGDBAPI_version
        gdal_version: *gdal_version
        geos_version: *geos_version
        gpsbabel_version: *gpsbabel_version
        libgeotiff_version: *libgeotiff_version
        libkml_version: *libkml_version
        mapnik_version: *mapnik_version
        packages: "${RPMBUILD_PYTHON_MAPNIK_PACKAGES}"
        postgis_version: *postgis_version
        proj_version: *proj_version
        rpmbuild_channel: *rpmbuild_channel
        sfcgal_version: *SFCGAL_version
      dockerfile: docker/Dockerfile.rpmbuild-mapnik-generic
  rpmbuild-rack:
    <<: *service_defaults
    depends_on:
      - rpmbuild
    build:
      <<: *build_defaults
      args:
        gem_packages: >-
          fcgi
          minitest
          minitest-sprint
          minitest-global_expectations
          thin
        packages: "${RPMBUILD_RACK_PACKAGES}"
        rpmbuild_channel: *rpmbuild_channel
      dockerfile: docker/Dockerfile.rpmbuild-geoint-deps
  rpmbuild-rubygem-libxml-ruby:
    <<: *service_defaults
    depends_on:
      - rpmbuild
    build:
      <<: *build_defaults
      args:
        gem_packages: >-
          minitest
          rake-compiler
        rpmbuild_channel: *rpmbuild_channel
        packages: "${RPMBUILD_RUBYGEM_LIBXML_RUBY_PACKAGES}"
      dockerfile: docker/Dockerfile.rpmbuild-geoint-deps
  rpmbuild-sfcgal:
    <<: *service_defaults
    depends_on:
      - rpmbuild-cgal
    build:
      <<: *build_defaults
      args:
        cgal_version: *CGAL_version
        packages: "${RPMBUILD_SFCGAL_PACKAGES}"
        rpmbuild_channel: *rpmbuild_channel
      dockerfile: docker/Dockerfile.rpmbuild-sfcgal
  rpmbuild-sqlite-pcre:
    <<: *service_defaults
    depends_on:
      - rpmbuild-generic
    build:
      <<: *build_defaults
      args:
        packages: "${RPMBUILD_SQLITE_PCRE_PACKAGES}"
        rpmbuild_channel: *rpmbuild_channel
  rpmbuild-tbb:
    <<: *service_defaults
    depends_on:
      - rpmbuild-generic
    build:
      <<: *build_defaults
      args:
        packages: "${RPMBUILD_TBB_PACKAGES}"
        rpmbuild_channel: *rpmbuild_channel
  rpmbuild-uriparser:
    <<: *service_defaults
    depends_on:
      - rpmbuild-generic
    build:
      <<: *build_defaults
      args:
        packages: "${RPMBUILD_URIPARSER_PACKAGES}"
        rpmbuild_channel: *rpmbuild_channel
