---
version: '3.8'

x-channel:
  dist: &rpmbuild_dist '.el7'
  channel_name: &rpmbuild_channel stable
  email: &rpmbuild_email "foundation-geoint-packaging@maxar.com"
  packager_name: &rpmbuild_name "Foundation Geoint Packaging"
  postgres_version:  &postgres_version '10'
  vendor: &rpmbuild_vendor "Maxar Technologies"

x-base-args: &rpmbuild_base_args
  rpmbuild_dist: *rpmbuild_dist
  rpmbuild_email: *rpmbuild_email
  rpmbuild_name: *rpmbuild_name
  rpmbuild_uid: "${RPMBUILD_UID}"
  rpmbuild_gid: "${RPMBUILD_GID}"

x-build-images:
  geos: &geos_image rpmbuild-geos
  libgeotiff: &libgeotiff_image rpmbuild-libgeotiff
  osmosis: &osmosis_image rpmbuild-generic
  sbt: &sbt_image rpmbuild-generic
  proj: &proj_image rpmbuild-proj
  sqlite: &sqlite_image rpmbuild-sqlite

x-build-defaults: &build_defaults
  context: .
  dockerfile: docker/Dockerfile.rpmbuild-generic
  labels:
    maintainer: *rpmbuild_email
    vendor: *rpmbuild_vendor

x-service-volumes: &service_volumes
  - "./RPMS:/rpmbuild/RPMS:rw"
  - "./SOURCES:/rpmbuild/SOURCES:rw"
  - "./SPECS:/rpmbuild/SPECS:ro"
  - "./scripts:/rpmbuild/scripts:ro"

x-service-defaults: &service_defaults
  command: 'tail -f /dev/null'
  init: true
  volumes: *service_volumes

x-versions:
  geos: &geos_version '3.9.1-1'
  libgeotiff: &libgeotiff_version '1.6.0-1'
  osmosis: &osmosis_version '0.48.3-1'
  proj: &proj_version '7.2.1-1'
  sbt: &sbt_version '1.4.7-1'
  sqlite: &sqlite_version '3.34.1-1'


## Docker Compose
services:
  rpmbuild:
    build:
      context: .
      dockerfile: docker/Dockerfile.rpmbuild
      args:
        <<: *rpmbuild_base_args
      labels:
        maintainer: *rpmbuild_email
        vendor: *rpmbuild_vendor
    command: 'tail -f /dev/null'
    init: true
    user: nobody
  rpmbuild-generic:
    <<: *service_defaults
    depends_on:
      - rpmbuild
    build:
      <<: *build_defaults
      args:
        rpmbuild_channel: *rpmbuild_channel
  rpmbuild-geos:
    <<: *service_defaults
    depends_on:
      - rpmbuild-generic
    build:
      <<: *build_defaults
      args:
        packages: "${GEOS_PACKAGES}"
        rpmbuild_channel: *rpmbuild_channel
  rpmbuild-sqlite:
    <<: *service_defaults
    depends_on:
      - rpmbuild-generic
    build:
      <<: *build_defaults
      args:
        packages: "${SQLITE_PACKAGES}"
        rpmbuild_channel: *rpmbuild_channel
  rpmbuild-proj:
    <<: *service_defaults
    depends_on:
      - rpmbuild-sqlite
    build:
      <<: *build_defaults
      args:
        packages: "${PROJ_PACKAGES}"
        rpmbuild_channel: *rpmbuild_channel
        sqlite_version: *sqlite_version
      dockerfile: docker/Dockerfile.rpmbuild-proj
  rpmbuild-libgeotiff:
    <<: *service_defaults
    depends_on:
      - rpmbuild-proj
    build:
      <<: *build_defaults
      args:
        packages: "${LIBGEOTIFF_PACKAGES}"
        rpmbuild_channel: *rpmbuild_channel
        proj_version: *proj_version
      dockerfile: docker/Dockerfile.rpmbuild-libgeotiff

## Vagrant
x-vagrant:
  images:
    base: !!omap
      - rpmbuild:
          args: *rpmbuild_base_args
      - rpmbuild-generic:
          args:
            rpmbuild_channel: *rpmbuild_channel
      - rpmbuild-geos:
          args:
            rpmbuild_channel: *rpmbuild_channel
      - rpmbuild-sqlite:
          args:
            rpmbuild_channel: *rpmbuild_channel
      - rpmbuild-proj:
          args:
            rpmbuild_channel: *rpmbuild_channel
      - rpmbuild-libgeotiff:
          args:
            rpmbuild_channel: *rpmbuild_channel
  rpms:
    osmosis:
      image: *osmosis_image
      version: *osmosis_version
    proj:
      image: *proj_image
      version: *proj_version
    sbt:
      image: *sbt_image
      version: *sbt_version
    sqlite:
      image: *sqlite_image
      version: *sqlite_version
